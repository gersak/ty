:host {
  display: block;
  font-family: var(--ty-font-sans);
  width: 100%;
}

.input-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  box-sizing: border-box;
  /* Consistent sizing for the container */
}

/* ===== LABEL STYLING ===== */

.input-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--ty-label-color);
  margin-bottom: 6px;
  line-height: 1.25;
  padding-left: 12px;
}

/* Required indicator - using SVG icon instead of CSS */
.required-icon {
  display: inline-flex;
  align-items: center;
  color: var(--ty-color-danger);
  width: 12px;
  height: 12px;
  vertical-align: middle;
}

/* ===== ERROR MESSAGE STYLING ===== */

.error-message {
  font-size: 12px;
  color: var(--ty-color-danger);
  margin-top: 4px;
  padding-left: 12px;
  line-height: 1.4;
}

/* Error state for inputs */
input.error {
  border-color: var(--ty-color-danger);
  background: var(--ty-bg-danger-soft);
}

input.error:focus {
  border-color: var(--ty-color-danger-mild);
  box-shadow: 0 0 0 3px var(--ty-input-shadow-focus);
}

/* ===== INPUT BASE STYLING ===== */

input {
  /* Base appearance - elegant and minimal like toddler */
  box-sizing: border-box;
  /* Ensure consistent sizing behavior */
  width: 100%;
  border: 1px solid var(--ty-input-border);
  border-radius: 6px;
  background: var(--ty-input-bg);
  color: var(--ty-input-color);
  font-family: inherit;
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  transition: all 0.15s ease-in-out;
  outline: none;

  /* Default size (md) - refined spacing */
  min-height: 40px;
  padding: 8px 12px;
}

/* Remove number input spinner arrows */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
  /* Firefox */
}

/* Focus state - elegant blue glow like toddler */
input:focus {
  border-color: var(--ty-input-border-focus);
  box-shadow: 0 0 0 3px var(--ty-input-shadow-focus);
  background: var(--ty-input-bg);
}

/* Hover state - subtle feedback */
input:hover:not(:disabled) {
  border-color: var(--ty-input-border-hover);
}

/* Disabled state - refined opacity */
input:disabled {
  cursor: not-allowed;
  opacity: 0.5;
  background: var(--ty-input-disabled-bg);
  border-color: var(--ty-input-disabled-border);
  color: var(--ty-input-disabled-color);
}

/* Placeholder styling - subtle and elegant */
input::placeholder {
  color: var(--ty-input-placeholder);
  font-weight: 400;
}

/* ===== SIZE MODIFIERS ===== */

/* Extra Small */
input.xs {
  min-height: 32px;
  padding: 4px 8px;
  font-size: 12px;
}

/* Small */
input.sm {
  min-height: 36px;
  padding: 6px 10px;
  font-size: 13px;
}

/* Medium (default) */
input.md {
  min-height: 40px;
  padding: 8px 12px;
  font-size: 14px;
}

/* Large */
input.lg {
  min-height: 44px;
  padding: 10px 14px;
  font-size: 16px;
}

/* Extra Large */
input.xl {
  min-height: 48px;
  padding: 12px 16px;
  font-size: 18px;
}

/* ===== NEW: INDUSTRY-STANDARD SEMANTIC FLAVOR MODIFIERS ===== */

/* Primary - Main brand focus state */
input.primary {
  border-color: var(--ty-input-primary-border, var(--ty-color-primary));
}


input.primary:hover {
  border-color: var(--ty-color-primary-mild);
}

input.primary:focus {
  border-color: var(--ty-color-primary-mild);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Secondary - Supporting action focus state */
input.secondary {
  border-color: var(--ty-input-secondary-border, var(--ty-color-secondary));
}

input.secondary:focus {
  border-color: var(--ty-color-secondary-mild);
  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
}

/* Success - Valid/confirmed input state */
input.success {
  border-color: var(--ty-input-success-border);
}

input.success:hover {
  border-color: var(--ty-color-success-mild);
}

input.success:focus {
  border-color: var(--ty-color-success-mild);
  box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
}

/* Danger - Error/invalid input state */
input.danger {
  border-color: var(--ty-input-danger-border);
}


input.danger:hover {
  border-color: var(--ty-color-danger-mild);
}

input.danger:focus {
  border-color: var(--ty-color-danger-mild);
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

/* Warning - Caution/attention needed input state */
input.warning {
  border-color: var(--ty-input-warning-border);
}

input.warning:hover {
  border-color: var(--ty-color-warning-mild);
}

input.warning:focus {
  border-color: var(--ty-color-warning-mild);
  box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
}

/* Info - Informational/helpful input state */
input.info {
  border-color: var(--ty-input-info-border);
}

input.info:focus {
  border-color: var(--ty-color-info-mild);
  box-shadow: 0 0 0 3px rgba(6, 182, 212, 0.1);
}

/* ===== LEGACY SEMANTIC FLAVOR MODIFIERS (Backward Compatibility) ===== */
/* 
   These legacy flavor classes continue to work exactly as before
   because they reference the new semantic tokens via CSS variable mapping:
   
   
   The mapping is handled in ty.variables.css, so no changes needed here.
*/

/* ===== SEMANTIC FLAVOR MODIFIERS ===== */

/* Important - Blue theme */
border-color: #3b82f6;
}

border-color: #2563eb;
box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Positive - Green theme for success */
border-color: #10b981;
}

border-color: #059669;
box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
}

/* Negative - Red theme for errors */
border-color: #ef4444;
}

border-color: #dc2626;
box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

/* Exception - Yellow theme for warnings */
border-color: #f59e0b;
}

border-color: #d97706;
box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
}

/* Unique - Purple theme */
border-color: #8b5cf6;
}

border-color: #7c3aed;
box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
}

/* ===== ACCESSIBILITY ENHANCEMENTS ===== */

input:focus-visible {
  outline: none;
  /* We use box-shadow instead */
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  input {
    border-width: 2px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  input {
    transition: none;
  }
}

/* ===== CONTAINER-AWARE RESPONSIVE BEHAVIOR ===== */

/* Scale down on smaller containers using container queries */
@container (max-width: 480px) {
  input.lg {
    font-size: 14px;
    padding: 8px 12px;
    min-height: 40px;
  }

  input.xl {
    font-size: 16px;
    padding: 10px 14px;
    min-height: 44px;
  }
}

@container (max-width: 320px) {
  input.xl {
    font-size: 14px;
    padding: 8px 12px;
    min-height: 40px;
  }
}

/* Fallback for browsers without container query support */
@media (max-width: 640px) {
  input.lg {
    font-size: 14px;
    padding: 8px 12px;
    min-height: 40px;
  }

  input.xl {
    font-size: 16px;
    padding: 10px 14px;
    min-height: 44px;
  }
}

@media (max-width: 480px) {
  input.xl {
    font-size: 14px;
    padding: 8px 12px;
    min-height: 40px;
  }
}
